{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\VSCode_workspace\\\\my_resume\\\\pbasu-resume-react\\\\src\\\\components\\\\common\\\\Category.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Section from './Section';\n\nconst renderTags = function renderTags(tags) {\n  if (tags) {\n    return React.createElement(\"ul\", {\n      className: \"keywords\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, tag)));\n  }\n\n  return null;\n};\n\nconst renderHeaderAnchors = function renderHeaderAnchors(title, link, anchorVisible) {\n  if (anchorVisible) {\n    return React.createElement(\"a\", {\n      href: link,\n      className: \"headerAnchor\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, title);\n  }\n\n  return title;\n};\n\nconst renderHeaderSection = function renderHeaderSection(title, link, description, tags, anchorVisible) {\n  if (title || tags) {\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, renderTags(tags), renderHeaderAnchors(title, link, anchorVisible), description);\n  }\n\n  return null;\n};\n\nconst renderCategory = function renderCategory(item, i, anchorVisible) {\n  return React.createElement(\"div\", {\n    className: \"item\",\n    key: \"exp_item_\".concat(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"upper-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"job-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, item.title), React.createElement(\"div\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, item.date)), renderHeaderSection(item.subtitle, item.subtitleLink, item.subtitleDetail, item.tags, anchorVisible)), React.createElement(\"div\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, item.description && item.description.constructor === Array ? item.description.map(entry => React.createElement(\"p\", {\n    key: \"\".concat(entry.substr(0, 10)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\xB7 \".concat(entry))) : null));\n};\n\nconst Category = props => {\n  const title = props.title,\n        list = props.list,\n        icon = props.icon,\n        anchorVisible = props.anchorVisible;\n  return React.createElement(Section, {\n    className: \"category-section\",\n    icon: icon || 'briefcase',\n    title: title || 'Category',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, list && list.constructor === Array ? list.map((item, i) => renderCategory(item, i, anchorVisible)) : null);\n};\n\nconst mapStateToProps = state => ({\n  anchorVisible: state.anchorVisibility.anchorVisible\n});\n\nexport default connect(mapStateToProps, null)(Category);\nCategory.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  anchorVisible: PropTypes.bool\n};","map":{"version":3,"sources":["D:\\Workspace\\VSCode_workspace\\my_resume\\pbasu-resume-react\\src\\components\\common\\Category.js"],"names":["React","connect","PropTypes","Section","renderTags","tags","map","tag","renderHeaderAnchors","title","link","anchorVisible","renderHeaderSection","description","renderCategory","item","i","date","subtitle","subtitleLink","subtitleDetail","constructor","Array","entry","substr","Category","props","list","icon","mapStateToProps","state","anchorVisibility","propTypes","arrayOf","object","isRequired","string","bool"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Section from './Section';\n\ntype Props = {\n  title ?: string,\n  icon ?: string,\n  list ?: Array<Object>,\n  anchorVisible : boolean\n};\n\nconst renderTags = function renderTags(tags : Array<string>) {\n  if (tags) {\n    return (\n      <ul className=\"keywords\">\n        {tags.map(tag => <li key={tag}>{tag}</li>)}\n      </ul>\n    );\n  }\n  return null;\n};\n\nconst renderHeaderAnchors = function renderHeaderAnchors(title : string, link : string, anchorVisible : boolean) {\n  if (anchorVisible) {\n    return <a href={link} className=\"headerAnchor\" target=\"_blank\">{title}</a>;\n  }\n  return title;\n};\n\nconst renderHeaderSection = function renderHeaderSection(title : string, link : string, description : string, tags : Array<string>, anchorVisible : boolean) {\n  if (title || tags) {\n    return (\n      <div className=\"header\">\n        {renderTags(tags)}\n        {renderHeaderAnchors(title, link, anchorVisible)}\n        {description}\n      </div>\n    );\n  }\n  return null;\n};\n\nconst renderCategory = function renderCategory(item : Object, i : number, anchorVisible : boolean) {\n  return (\n    <div className=\"item\" key={`exp_item_${i}`}>\n      <div className=\"meta\">\n        <div className=\"upper-row\">\n          <h3 className=\"job-title\">{item.title}</h3>\n          <div className=\"time\">{item.date}</div>\n        </div>\n        {renderHeaderSection(item.subtitle, item.subtitleLink, item.subtitleDetail, item.tags, anchorVisible)}\n      </div>\n      <div className=\"details\">\n        { item.description && item.description.constructor === Array ?\n          item.description.map(entry => (<p key={`${entry.substr(0, 10)}`}>{`Â· ${entry}`}</p>))\n          : null\n        }\n      </div>\n    </div>\n  );\n};\n\nconst Category = (props : Props) => {\n  const {\n    title, list, icon, anchorVisible,\n  } = props;\n  return (\n    <Section className=\"category-section\" icon={icon || 'briefcase'} title={title || 'Category'}>\n      {list && list.constructor === Array ? list.map((item, i) => renderCategory(item, i, anchorVisible)) : null}\n    </Section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  anchorVisible: state.anchorVisibility.anchorVisible,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Category);\n\nCategory.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  anchorVisible: PropTypes.bool,\n};\n\n"]},"metadata":{},"sourceType":"module"}