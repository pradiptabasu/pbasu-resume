{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\VSCode_workspace\\\\my_resume\\\\pbasu-resume-react\\\\src\\\\components\\\\sidebar\\\\Contact.js\";\n\n/* eslint react/no-unused-prop-types: \"off\" */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst renderContactAnchors = function renderContactAnchors(visible, href, entry) {\n  if (visible) {\n    return React.createElement(\"a\", {\n      className: \"contactAnchor\",\n      href: \"//\".concat(href),\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, entry.value);\n  }\n\n  return entry.value;\n};\n\nconst renderContactInfo = function renderContactInfo(key, entry, anchorVisible) {\n  if (key !== 'children' && entry.constructor === Object) {\n    let href;\n\n    switch (key) {\n      case 'email':\n        href = \"mailto: \".concat(entry.value);\n        break;\n\n      case 'phone':\n        href = \"tel:\".concat(entry.value);\n        break;\n\n      default:\n        href = entry.value;\n    }\n\n    return React.createElement(\"li\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: entry.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), renderContactAnchors(anchorVisible, href, entry));\n  }\n\n  return null;\n};\n\nconst Contact = props => React.createElement(\"div\", {\n  className: \"contact-container container-block\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  className: \"list-unstyled contact-list\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, Object.entries(props).map(([key, entry]) => renderContactInfo(key, entry, props.anchorVisible))));\n\nconst mapStateToProps = state => ({\n  anchorVisible: state.anchorVisibility.anchorVisible\n});\n\nexport default connect(mapStateToProps, null)(Contact);\nContact.propTypes = {\n  email: PropTypes.shape,\n  phone: PropTypes.shape,\n  website: PropTypes.shape,\n  linkedin: PropTypes.shape,\n  github: PropTypes.shape,\n  npm: PropTypes.shape,\n  anchorVisible: PropTypes.number\n};","map":{"version":3,"sources":["D:\\Workspace\\VSCode_workspace\\my_resume\\pbasu-resume-react\\src\\components\\sidebar\\Contact.js"],"names":["React","PropTypes","connect","renderContactAnchors","visible","href","entry","value","renderContactInfo","key","anchorVisible","constructor","Object","icon","Contact","props","entries","map","mapStateToProps","state","anchorVisibility","propTypes","email","shape","phone","website","linkedin","github","npm","number"],"mappings":";;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAYA,MAAMC,oBAAoB,GAAG,SAASA,oBAAT,CAA8BC,OAA9B,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoD;AAC/E,MAAIF,OAAJ,EAAa;AACX,WACE;AAAG,MAAA,SAAS,EAAC,eAAb;AAA6B,MAAA,IAAI,cAAOC,IAAP,CAAjC;AAAgD,MAAA,MAAM,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KAAK,CAACC,KADT,CADF;AAKD;;AACD,SACED,KAAK,CAACC,KADR;AAGD,CAXD;;AAaA,MAAMC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,GAA3B,EAAyCH,KAAzC,EAAsDI,aAAtD,EAA8E;AACtG,MAAID,GAAG,KAAK,UAAR,IAAsBH,KAAK,CAACK,WAAN,KAAsBC,MAAhD,EAAwD;AACtD,QAAIP,IAAJ;;AACA,YAAQI,GAAR;AACE,WAAK,OAAL;AACEJ,QAAAA,IAAI,qBAAcC,KAAK,CAACC,KAApB,CAAJ;AACA;;AACF,WAAK,OAAL;AACEF,QAAAA,IAAI,iBAAUC,KAAK,CAACC,KAAhB,CAAJ;AACA;;AACF;AACEF,QAAAA,IAAI,GAAGC,KAAK,CAACC,KAAb;AARJ;;AAWA,WACE;AAAI,MAAA,GAAG,EAAEE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAEH,KAAK,CAACO,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGV,oBAAoB,CAACO,aAAD,EAAgBL,IAAhB,EAAsBC,KAAtB,CAFvB,CADF;AAMD;;AACD,SAAO,IAAP;AACD,CAtBD;;AAwBA,MAAMQ,OAAO,GAAIC,KAAD,IACd;AAAK,EAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAI,EAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,MAAM,CAACI,OAAP,CAAeD,KAAf,EAAsBE,GAAtB,CAA0B,CAAC,CAACR,GAAD,EAAMH,KAAN,CAAD,KAAkBE,iBAAiB,CAACC,GAAD,EAAMH,KAAN,EAAaS,KAAK,CAACL,aAAnB,CAA7D,CADH,CADF,CADF;;AAQA,MAAMQ,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,aAAa,EAAES,KAAK,CAACC,gBAAN,CAAuBV;AADN,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CACpBgB,eADoB,EAEpB,IAFoB,CAAP,CAGbJ,OAHa,CAAf;AAKAA,OAAO,CAACO,SAAR,GAAoB;AAClBC,EAAAA,KAAK,EAAErB,SAAS,CAACsB,KADC;AAElBC,EAAAA,KAAK,EAAEvB,SAAS,CAACsB,KAFC;AAGlBE,EAAAA,OAAO,EAAExB,SAAS,CAACsB,KAHD;AAIlBG,EAAAA,QAAQ,EAAEzB,SAAS,CAACsB,KAJF;AAKlBI,EAAAA,MAAM,EAAE1B,SAAS,CAACsB,KALA;AAMlBK,EAAAA,GAAG,EAAE3B,SAAS,CAACsB,KANG;AAOlBb,EAAAA,aAAa,EAAET,SAAS,CAAC4B;AAPP,CAApB","sourcesContent":["// @flow\n/* eslint react/no-unused-prop-types: \"off\" */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\ntype Props = {\n  email ?: Object,\n  phone ?: Object,\n  website ?: Object,\n  linkedin ?: Object,\n  github ?: Object,\n  npm ?: Object,\n  anchorVisible : number\n}\n\nconst renderContactAnchors = function renderContactAnchors(visible, href, entry) {\n  if (visible) {\n    return (\n      <a className=\"contactAnchor\" href={`//${href}`} target=\"_blank\">\n        {entry.value}\n      </a>\n    );\n  }\n  return (\n    entry.value\n  );\n};\n\nconst renderContactInfo = function renderContactInfo(key : string, entry : any, anchorVisible : number) {\n  if (key !== 'children' && entry.constructor === Object) {\n    let href;\n    switch (key) {\n      case 'email':\n        href = `mailto: ${entry.value}`;\n        break;\n      case 'phone':\n        href = `tel:${entry.value}`;\n        break;\n      default:\n        href = entry.value;\n    }\n\n    return (\n      <li key={key}>\n        <i className={entry.icon} />\n        {renderContactAnchors(anchorVisible, href, entry)}\n      </li>\n    );\n  }\n  return null;\n};\n\nconst Contact = (props : Props) => (\n  <div className=\"contact-container container-block\">\n    <ul className=\"list-unstyled contact-list\">\n      {Object.entries(props).map(([key, entry]) => renderContactInfo(key, entry, props.anchorVisible))}\n    </ul>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  anchorVisible: state.anchorVisibility.anchorVisible,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Contact);\n\nContact.propTypes = {\n  email: PropTypes.shape,\n  phone: PropTypes.shape,\n  website: PropTypes.shape,\n  linkedin: PropTypes.shape,\n  github: PropTypes.shape,\n  npm: PropTypes.shape,\n  anchorVisible: PropTypes.number,\n};\n"]},"metadata":{},"sourceType":"module"}